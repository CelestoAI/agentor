name: pytest
permissions:
  contents: read

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  pytest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        include:
          - os: ubuntu-latest
            uv-cache: ~/.cache/uv
          - os: macos-latest
            uv-cache: ~/Library/Caches/uv
          - os: windows-latest
            uv-cache: ~\AppData\Local\uv\cache
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache uv cache
        uses: actions/cache@v4
        with:
          path: ${{ matrix.uv-cache }}
          key: ${{ runner.os }}-uv-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-uv-
            ${{ runner.os }}-

      - name: Install dependencies using uv
        run: |
          pip install uv
          uv venv
          uv pip install coverage pytest pytest-cov
          uv sync
          uv pip list

      - name: Run Tests
        run: |
          uv run coverage erase
          uv run coverage run -m pytest

      - name: Generate Coverage Report
        run: |
          uv run coverage report -m -i
          uv run coverage xml -i

      - name: Upload Coverage to Codecov
        if: runner.os != 'macOS'
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false
